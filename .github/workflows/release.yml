---
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: Install development tools
      run: make tools

    - name: Run tests
      run: make test

    - name: Run security checks
      run: make security

    - name: Run fuzz tests
      run: make fuzz

    - name: Generate coverage report
      run: make coverage

    - name: Create source archive
      run: |
        mkdir -p dist
        
        # Create source tarball excluding .git and other unnecessary files
        tar --exclude='.git' --exclude='dist' --exclude='*.log' --exclude='coverage.*' \
            -czf dist/argus-provider-git-${{ github.ref_name }}-source.tar.gz .
        
        # Create checksums
        cd dist
        sha256sum * > checksums.txt

    - name: Generate build provenance attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: 'dist/*'

    - name: Generate SBOM
      run: |
        # Generate SBOM from Go modules using syft
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
        /usr/local/bin/syft . -o spdx-json=sbom.json
        
    - name: Generate SBOM attestation  
      uses: actions/attest-sbom@v1
      with:
        subject-path: 'dist/*'
        sbom-path: 'sbom.json'

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*
          coverage.html
        body: |
          ## Argus Git Provider ${{ github.ref_name }}
          
          Official Git repository configuration provider for the Argus dynamic configuration framework.
          
          ### Installation
          
          ```bash
          go get github.com/agilira/argus-provider-git@${{ github.ref_name }}
          ```
          
          ### Features
          
          - ‚úÖ **Secure Git Integration**: Enterprise-ready Git repository integration
          - ‚úÖ **Zero-Allocation Performance**: High-performance configuration loading with LRU caching
          - ‚úÖ **Real-time Configuration**: Live configuration updates with watch capabilities
          - ‚úÖ **Production Security**: Comprehensive fuzz testing and security validation
          - ‚úÖ **Multi-Format Support**: JSON, YAML, TOML configuration formats
          - ‚úÖ **SSH & HTTPS Auth**: Full authentication support with secure credential handling
          
          ### Basic Usage
          
          ```go
          import "github.com/agilira/argus-provider-git"
          
          // Load configuration from Git repository
          config, err := gitprovider.Load("git://github.com/user/config-repo.git#config.json?ref=main")
          if err != nil {
              log.Fatal(err)
          }
          
          // Use with Argus framework
          provider := gitprovider.New()
          err = argus.LoadFromProvider(provider)
          ```
          
          ### Security Features
          
          - üõ°Ô∏è **SSRF Protection**: Prevents Server-Side Request Forgery attacks
          - üõ°Ô∏è **Path Traversal Prevention**: Secure file path validation  
          - üõ°Ô∏è **URL Injection Prevention**: Comprehensive URL parsing and validation
          - üõ°Ô∏è **SSH Key Security**: Secure SSH key permission validation
          - üõ°Ô∏è **Command Injection Protection**: Prevents malicious command execution
          - üõ°Ô∏è **Fuzz Tested**: Comprehensive security fuzz testing coverage
          
          ### Authentication Support
          
          - **SSH Keys**: Secure SSH key-based authentication
          - **HTTPS Basic Auth**: Username/password authentication
          - **Token Auth**: GitHub/GitLab personal access tokens
          - **Custom Auth**: Flexible authentication parameter support
          
          ### Verification
          
          Verify release authenticity using GitHub CLI:
          ```bash
          gh attestation verify ./argus-provider-git-* --owner agilira
          ```
          
          ### Compatibility
          
          - **Go Version**: 1.19+
          - **Git Version**: Any modern Git client
          - **Argus Framework**: Compatible with latest Argus releases
          - **Platforms**: Linux, macOS, Windows
          
          ### Configuration URL Examples
          
          ```bash
          # GitHub with token authentication
          git://github.com/user/repo.git#config.json?ref=main&token=ghp_xxx
          
          # GitLab with SSH key
          git://git@gitlab.com:user/repo.git#config.yaml?ssh_key=/path/to/key
          
          # Self-hosted with basic auth
          git://git.company.com/configs/app.git#prod.toml?username=user&password=pass
          ```
          
          ### Changes
          
          See [CHANGELOG.md](https://github.com/agilira/argus-provider-git/blob/main/CHANGELOG.md) for detailed changes.
        generate_release_notes: true
        draft: false
        prerelease: false